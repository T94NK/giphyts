{"version":3,"sources":["App.styles.ts","components/Header/Header.styles.ts","components/Header/Header.tsx","components/SearchPage/SearchPage.tsx","constants/api.ts","components/TrendsPage/TrendsPage.tsx","App.tsx","constants/repo.ts","index.tsx"],"names":["Wrapper","styled","div","StyledButton","Button","StyledInput","Input","ModalWrapper","Images","ImageList","Image","img","ImagesList","ImageListItem","SearchPagination","Pagination","SearchWrapper","nav","Link","NavLink","Header","to","SearchPage","React","useState","gifs","setGifs","search","setSearch","isLoading","setIsLoading","setIsError","count","setCount","currentPage","setCurrentPage","fetchSearchData","event","a","preventDefault","axios","params","api_key","q","limit","results","data","pagination","total_count","length","Math","ceil","page","onChange","value","type","placeholder","e","target","onClick","cols","rowHeight","map","gif","src","images","fixed_width","url","alt","id","giphyFetch","GiphyFetch","GridDemo","onGifClick","window","innerWidth","width","setWidth","fetchGifs","offset","trending","columns","gutter","onResize","TrendsPage","modalGif","setModalGif","undefined","App","basename","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6cde0865.chunk.js","sourcesContent":["import styled from 'styled-components';\r\nimport Button from '@material-ui/core/Button';\r\nimport Input from '@material-ui/core/Input';\r\nimport ImageList from '@mui/material/ImageList';\r\nimport ImageListItem from '@mui/material/ImageListItem';\r\nimport Pagination from '@mui/material/Pagination';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  height: 100%;\r\n  width: 90%;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  margin: 0px;\r\n  margin-left: 160px;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n`;\r\n\r\nexport const StyledButton = styled(Button)`\r\n  width: 150px;\r\n  z-index: 1;\r\n\r\n  margin: 20px 0px;\r\n  background-color: #4e53a5;\r\n\r\n  & .MuiButton-label {\r\n    text-align: center;\r\n    padding: 20px 20px;\r\n    border-radius: 50px;\r\n\r\n    color: #e2a8be;\r\n    font-size: 20px;\r\n    font-family: 'Permanent Marker';\r\n    background-color: #4e53a5;\r\n  }\r\n  & .MuiTouchRipple-root {\r\n    border-radius: 50px;\r\n    padding: 20px 50px;\r\n  }\r\n`;\r\n\r\nexport const StyledInput = styled(Input)`\r\n  width: 100%;\r\n  padding: 30px 0;\r\n  padding-left: 42%;\r\n  margin: 20px 0px;\r\n  & .MuiInput-input {\r\n    color: #e2a8be;\r\n    font-size: 25px;\r\n    font-family: 'Permanent Marker';\r\n  }\r\n`;\r\n\r\nexport const ModalWrapper = styled.div`\r\n  position: fixed;\r\n  z-index: 1;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nexport const Images = styled(ImageList)`\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow-y: none;\r\n  overflow-x: none;\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow-y: none;\r\n  overflow-x: none;\r\n  &:hover {\r\n    transform: scale(1.3, 1.3);\r\n    z-index: 1;\r\n  }\r\n`;\r\nexport const ImagesList = styled(ImageListItem)`\r\n  overflow-y: none;\r\n  overflow-x: none;\r\n`;\r\nexport const SearchPagination = styled(Pagination)`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  position: fixed;\r\n  z-index: 1;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  background-color: #4e53a5;\r\n  & .MuiPaginationItem-text {\r\n    color: #e2a8be;\r\n    font-size: 18px;\r\n    font-family: 'Permanent Marker';\r\n  }\r\n`;\r\n\r\nexport const SearchWrapper = styled.div`\r\n  margin-left: 150px;\r\n  margin-right: 90px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  \r\n`;\r\n","import styled from 'styled-components';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport const Wrapper = styled.nav`\r\n  height: 100%;\r\n  width: 160px;\r\n  position: fixed;\r\n  z-index: 1;\r\n  top: 0;\r\n  left: 0;\r\n  background-color: #4e53a5;\r\n  overflow-x: hidden;\r\n  padding-top: 20px;\r\n`;\r\n\r\nexport const Link = styled(NavLink)`\r\n  padding: 6px 8px 6px 16px;\r\n  font-family: 'Permanent Marker', cursive;\r\n  text-decoration: none;\r\n  font-size: 25px;\r\n  color: #e2a8be;\r\n  display: block;\r\n  &.active {\r\n    color: #d58ebf;\r\n  }\r\n`;\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport { Wrapper, Link } from './Header.styles';\r\n\r\nconst Header = () => (\r\n  <Wrapper>\r\n    <Link to='/'>In trend</Link>\r\n    <Link to='/search'>Find GIF`s</Link>\r\n  </Wrapper>\r\n);\r\n\r\nexport default Header;\r\n","/* eslint-disable @typescript-eslint/no-shadow */\r\nimport React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport { GIFObject } from '../../Interfaces/Interfaces';\r\n\r\nimport { GIPHY_API } from '../../constants/api';\r\n\r\nimport {\r\n  StyledButton,\r\n  StyledInput,\r\n  Images,\r\n  Image,\r\n  ImagesList,\r\n  SearchPagination,\r\n  SearchWrapper,\r\n} from '../../App.styles';\r\n\r\nconst SearchPage = () => {\r\n  const [gifs, setGifs] = React.useState<Array<GIFObject>>([]);\r\n  const [search, setSearch] = React.useState<string>('');\r\n  const [isLoading, setIsLoading] = React.useState<boolean>(false);\r\n  const [isError, setIsError] = React.useState<boolean>(false);\r\n  const [count, setCount] = React.useState<number>(1);\r\n  const [currentPage, setCurrentPage] = React.useState<number>(1);\r\n\r\n  const fetchSearchData = async (event: { preventDefault: () => void }) => {\r\n    event.preventDefault();\r\n    setIsError(false);\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const results = await axios(GIPHY_API, {\r\n        params: {\r\n          api_key: 'UqaC64gWpzwVvwhR5BUpR4B6z86ZdTmj',\r\n          q: search,\r\n          limit: 18,\r\n        },\r\n      });\r\n\r\n      setGifs(results.data.data);\r\n      setCount(results.data.pagination.total_count);\r\n    } catch (err) {\r\n      setIsError(true);\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const handleChange = (event: React.ChangeEvent<unknown>, value: number) => {\r\n    setCurrentPage(value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {gifs.length > 0 && (\r\n        <SearchPagination\r\n          count={Math.ceil(count / 18)}\r\n          page={currentPage}\r\n          onChange={handleChange}\r\n        />\r\n      )}\r\n\r\n      <SearchWrapper>\r\n        <StyledInput\r\n          type='text'\r\n          placeholder='Search GIF'\r\n          value={search}\r\n          onChange={(e) => setSearch(e.target.value)}\r\n        />\r\n        <StyledButton type='button' onClick={fetchSearchData}>\r\n          Search\r\n        </StyledButton>\r\n      </SearchWrapper>\r\n\r\n      {isLoading ? (\r\n        <div>Loading</div>\r\n      ) : (\r\n        <Images cols={6} rowHeight={300}>\r\n          {gifs?.map((gif) => (\r\n            <ImagesList key={gif.id}>\r\n              <Image\r\n                src={`${gif.images.fixed_width.url}?w=164&h=164&fit=crop&auto=format`}\r\n                alt='123'\r\n              />\r\n            </ImagesList>\r\n          ))}\r\n        </Images>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchPage;\r\n","export const GIPHY_API = \"https://api.giphy.com/v1/gifs/search\";","/* eslint-disable @typescript-eslint/no-shadow */\r\nimport React from 'react';\r\nimport { GiphyFetch } from '@giphy/js-fetch-api';\r\nimport ResizeObserver from 'react-resize-observer';\r\nimport { Grid, Gif } from '@giphy/react-components';\r\nimport { ModalWrapper } from '../../App.styles';\r\n\r\nconst giphyFetch = new GiphyFetch('UqaC64gWpzwVvwhR5BUpR4B6z86ZdTmj');\r\n\r\nconst GridDemo = ({ onGifClick }: any) => {\r\n  const fetchGifs = (offset: number) => giphyFetch.trending({ offset, limit: 10 });\r\n  const [width, setWidth] = React.useState(window.innerWidth);\r\n\r\n  return (\r\n    <>\r\n      <Grid onGifClick={onGifClick} fetchGifs={fetchGifs} width={width} columns={4} gutter={6} />\r\n      <ResizeObserver\r\n        onResize={({ width }) => {\r\n          setWidth(width);\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst TrendsPage: React.FC = () => {\r\n  const [modalGif, setModalGif] = React.useState();\r\n\r\n  return (\r\n    <>\r\n      {modalGif && (\r\n        <ModalWrapper\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            setModalGif(undefined);\r\n          }}>\r\n          <Gif gif={modalGif} width={400} />\r\n        </ModalWrapper>\r\n      )}\r\n      <GridDemo\r\n        onGifClick={(gif: any, e: { preventDefault: () => void }) => {\r\n          e.preventDefault();\r\n          setModalGif(gif);\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TrendsPage;\r\n","import React from 'react';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport { Wrapper } from './App.styles';\nimport { REPO_NAME } from './constants/repo';\nimport Header from './components/Header/Header';\nimport SearchPage from './components/SearchPage/SearchPage';\nimport TrendsPage from './components/TrendsPage/TrendsPage';\n\nconst App: React.FC = () => (\n  <BrowserRouter basename={`/${REPO_NAME}/`}>\n    <Wrapper>\n      <Header />\n\n      <Routes>\n        <Route path='/search' element={<SearchPage />} />\n        <Route path='/' element={<TrendsPage />} />\n      </Routes>\n    </Wrapper>\n  </BrowserRouter>\n);\n\nexport default App;\n","export const REPO_NAME = 'giphyts'","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}